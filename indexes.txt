Database Index 
 What is index?
	A database index is a data structure that improves the speed of data retrieval operations on a database table at the cost
        of additional writes and storage space to maintain the index data structure.
 What indexing methods exist?
	1.Non-clustered:
		- The data is present in arbitrary order, but the logical ordering is specified by the index. 
	2.Clustered:
		- Clustering alters the data block into a certain distinct order to match the index, resulting in the row data being stored in order.
	
 What is B-Tree?
	 B-tree(Binary Search Tree) is a tree data structure that keeps data sorted and allows searches, sequential access, insertions, and deletions in logarithmic time. 
	 The node can have more than two children.The B-tree is optimized to read large data blocks.

 What is column-store index?
	The in-memory columnstore index is the standard for storing and querying large data warehousing fact tables.
        It uses column-based data storage and query processing to achieve up to 10x query performance gains in your 
        data warehouse over traditional row-oriented storage, and up to 10x data compression over the uncompressed data size.
        Beginning with SQL Server 2016 Community Technology Preview 2 (CTP2), columnstore indexes enable operational analytics,
        the ability to run performant real-time analytics on a transactional workload.

 What is full-text search index?
	Full-text search index is when engine searches a large block of text it uses Indexer to scan the text of all the documents
        and build a list of search terms (often called an index, but more correctly named a concordance).

 What is spatial index?
	A spatial index is a type of extended index that allows you to index a spatial column.

 What are the pros and cons of using indexes? 
	They improve the speed of data retrieval operations on a database table at the cost 
        of additional writes and storage space to maintain the index data structure. Indexes acquire quick location data without
        having to search every row in a database table every time a database table is accessed. 
	Too index will affect the speed of update and insert, because it requires the same update each index file.
        For a frequently updated and inserted into the table, there is no need for a rarely used where the words indexed
        separately, small table, the cost of sorting will not be great, there is no need to create additional indexes.
        In some cases, the indexing words may not be fast, for example, the index is placed in a contiguous memory space,
        which will increase the burden of disk read, which is optimal, it should be through the actual use of the environment to be tested.